#!/bin/bash

DIR=$(readlink -f "$(dirname "$0")")

usage() {
  cat <<EOF
Runs docker commands used for managing containers for the configured targets

Usage:
  targets <COMMAND>
  targets --help

Options:
  -h, --help Shows this message

Commands:
  down    Stop and remove containers, networks, images, and volumes
  ps      List containers
  pull    Pull service images
  restart Restart services
  start   Start services
  stop    Stop services
  up      Create and start containers
EOF
}

COMMAND="$1"

case "$COMMAND" in
  -h|--help)
    usage
    exit 0
    ;;
  pull)
    COMPOSE_COMMAND="pull"
    ;;
  up)
    COMPOSE_COMMAND="up -d"
    ;;
  down)
    COMPOSE_COMMAND="down"
    ;;
  ps)
    COMPOSE_COMMAND="ps"
    ;;
  stop)
    COMPOSE_COMMAND="stop"
    ;;
  restart)
    COMPOSE_COMMAND="restart"
    ;;
  *)
    echo "Invalid command"
    exit 1;
esac

header() {
  echo -e "\n\e[1mRunning \e[33m$COMMAND\e[39m for target \e[32m$1\e[0m\n"
}

run() {
  header "local-environment"

  docker-compose \
    -f "$DIR/../docker-compose.yml" \
    -f "$DIR/../docker-compose.network.yml" \
    -p oddin-local-environment \
    ${COMPOSE_COMMAND}

  while IFS='' read -r target; do
    run_for_one "$target"
  done < "$DIR/../targets.cfg"
}

run_for_one() {
  local target=$1
  header $target

  # NOTE: Given that we encourage a per repository configuration, and
  # docker-compose uses the context of the first file, there's no way to use all
  # the compose files at once
  docker-compose \
    -f "$DIR/../../$target/docker-compose.yml" \
    -f "$DIR/../targets/docker-compose.$target.yml" \
    -f "$DIR/../docker-compose.network.yml" \
    -p "oddin-$target" \
    ${COMPOSE_COMMAND}
}

run
